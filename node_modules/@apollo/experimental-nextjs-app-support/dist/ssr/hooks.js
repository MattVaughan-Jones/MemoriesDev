"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSuspenseQuery = exports.useQuery = exports.useFragment = void 0;
const client_1 = require("@apollo/client");
const useTransportValue_1 = require("./useTransportValue");
exports.useFragment = wrap(client_1.useFragment, [
    "data",
    "complete",
    "missing",
]);
exports.useQuery = wrap(client_1.useQuery, [
    "data",
    "loading",
    "networkStatus",
    "called",
]);
exports.useSuspenseQuery = wrap(client_1.useSuspenseQuery, [
    "data",
    "networkStatus",
]);
function wrap(useFn, transportKeys) {
    return ((...args) => {
        const result = useFn(...args);
        const transported = {};
        for (const key of transportKeys) {
            transported[key] = result[key];
        }
        return Object.assign(Object.assign({}, result), (0, useTransportValue_1.useTransportValue)(transported));
    });
}
//# sourceMappingURL=hooks.js.map