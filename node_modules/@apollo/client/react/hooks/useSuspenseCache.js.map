{"version":3,"file":"useSuspenseCache.js","sourceRoot":"","sources":["../../../src/react/hooks/useSuspenseCache.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AACnC,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAGpD,MAAM,UAAU,gBAAgB,CAAC,QAAwB;IACvD,IAAM,OAAO,GAAG,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAC/C,IAAM,aAAa,GAAG,QAAQ,IAAI,OAAO,CAAC,aAAa,CAAC;IAExD,SAAS,CACP,aAAa,EACb,6EAA6E;QAC3E,8EAA8E;QAC9E,kDAAkD,CACrD,CAAC;IAEF,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["import { useContext } from 'react';\nimport { getApolloContext } from '../context';\nimport { invariant } from '../../utilities/globals';\nimport type { SuspenseCache } from '../cache';\n\nexport function useSuspenseCache(override?: SuspenseCache) {\n  const context = useContext(getApolloContext());\n  const suspenseCache = override || context.suspenseCache;\n\n  invariant(\n    suspenseCache,\n    'Could not find a \"suspenseCache\" in the context or passed in as an option. ' +\n      'Wrap the root component in an <ApolloProvider> and provide a suspenseCache, ' +\n      'or pass a SuspenseCache instance in via options.'\n  );\n\n  return suspenseCache;\n}\n"]}